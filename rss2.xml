<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>ZJQian&#39;s Blogs</title>
    <link>http://yoursite.com/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>stay hungry, stay foolish</description>
    <pubDate>Sat, 27 Oct 2018 03:36:25 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>一行命令统计iOS工程代码总行数</title>
      <link>http://yoursite.com/2018/10/27/%E4%B8%80%E8%A1%8C%E5%91%BD%E4%BB%A4%E7%BB%9F%E8%AE%A1iOS%E5%B7%A5%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%80%BB%E8%A1%8C%E6%95%B0/</link>
      <guid>http://yoursite.com/2018/10/27/%E4%B8%80%E8%A1%8C%E5%91%BD%E4%BB%A4%E7%BB%9F%E8%AE%A1iOS%E5%B7%A5%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%80%BB%E8%A1%8C%E6%95%B0/</guid>
      <pubDate>Sat, 27 Oct 2018 02:35:39 GMT</pubDate>
      <description>
      
        &lt;p&gt;我们有时候想要统计一下我们的工程的总代码行数，来获取一些成就感或者作为别的用图，这里就介绍一些如何便捷地统计代码的行数，非常简单，方法如下：&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>我们有时候想要统计一下我们的工程的总代码行数，来获取一些成就感或者作为别的用图，这里就介绍一些如何便捷地统计代码的行数，非常简单，方法如下：<br><a id="more"></a></p><ol><li>打开终端；</li><li>通过cd命令到达我们的工程文件，这里注意如果要避免统计引用的第三方库的代码量，我们就要进一步进到我们自己写的代码文件中去，一般是一个与工程文件同名的文件；</li><li>统计代码行数：</li></ol><p>如果想列出每个文件的行数，输入命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find . -name <span class="string">"*.m"</span> -or -name <span class="string">"*.h"</span> -or -name <span class="string">"*.xib"</span> -or -name <span class="string">"*.c"</span> |xargs wc -l</span><br></pre></td></tr></table></figure><p>如果想直接列出总代码行数，输入命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find . -name <span class="string">"*.m"</span> -or -name <span class="string">"*.h"</span> -or -name <span class="string">"*.xib"</span> -or -name <span class="string">"*.c"</span> |xargs grep -v <span class="string">"^$"</span>|wc -l</span><br></pre></td></tr></table></figure><p>这样就可以直接得出数量了，而且非常快，是不是很方便\~</p><p>这个统计过程会去掉空行，但注释是会计算在内的。</p>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/10/27/%E4%B8%80%E8%A1%8C%E5%91%BD%E4%BB%A4%E7%BB%9F%E8%AE%A1iOS%E5%B7%A5%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%80%BB%E8%A1%8C%E6%95%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>MAC 终端上传代码到Github 或者 Gitlab</title>
      <link>http://yoursite.com/2018/10/27/MAC%20%E7%BB%88%E7%AB%AF%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81%E5%88%B0Github%20%E6%88%96%E8%80%85%20Gitlab/</link>
      <guid>http://yoursite.com/2018/10/27/MAC%20%E7%BB%88%E7%AB%AF%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81%E5%88%B0Github%20%E6%88%96%E8%80%85%20Gitlab/</guid>
      <pubDate>Sat, 27 Oct 2018 02:32:39 GMT</pubDate>
      <description>
      
        &lt;p&gt;1.创建远程仓库。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/931143/201712/931143-20171206110906988-34407557.png&quot; alt=&quot;这里写图片描述&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Project name：项目名称&lt;/p&gt;
&lt;p&gt;Project description (optional)：项目介绍&lt;/p&gt;
&lt;p&gt;Visibility Level ：项目的访问权限&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/931143/201712/931143-20171206111039097-1933937425.png&quot; alt=&quot;这里写图片描述&quot;&gt;&lt;/p&gt;
&lt;p&gt;2.创建完成后操作,终端cd 到你需要克隆到的文件夹目录下：&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>1.创建远程仓库。</p><p><img src="https://images2017.cnblogs.com/blog/931143/201712/931143-20171206110906988-34407557.png" alt="这里写图片描述"></p><blockquote><p>Project name：项目名称</p><p>Project description (optional)：项目介绍</p><p>Visibility Level ：项目的访问权限</p></blockquote><p><img src="https://images2017.cnblogs.com/blog/931143/201712/931143-20171206111039097-1933937425.png" alt="这里写图片描述"></p><p>2.创建完成后操作,终端cd 到你需要克隆到的文件夹目录下：<br><a id="more"></a></p><p>　</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">　a. <span class="built_in">cd</span> &lt;你本地文件夹目录&gt;</span><br><span class="line"></span><br><span class="line">　　b.git <span class="built_in">clone</span> &lt;你自己刚创建的远程仓库目录&gt;</span><br><span class="line"></span><br><span class="line">　　c.把代码导入你<span class="built_in">clone</span> 下来的目录下</span><br></pre></td></tr></table></figure><p>3.提交代码　　　　</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a. git add *</span><br><span class="line">　　b.git commit -m<span class="string">"&lt;注释&gt;"</span></span><br><span class="line">　　c.git push origin master是简单的代码上传过程。</span><br></pre></td></tr></table></figure><p>注：你自己也可以在终端创建远程仓库</p><h2 id="4-打开git命令窗口"><a href="#4-打开git命令窗口" class="headerlink" title="4.打开git命令窗口:"></a>4.打开git命令窗口:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> 远程代码仓库的地址</span><br><span class="line"><span class="built_in">cd</span> （git <span class="built_in">clone</span>的文件夹路径）</span><br><span class="line"></span><br><span class="line">git pull origin master//更新 必须做的操作</span><br><span class="line"></span><br><span class="line">// git remote add origin 你刚才建立的项目连接</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">'注释'</span></span><br><span class="line">git push -u origin master 将代码推送到gitlab端</span><br></pre></td></tr></table></figure><h2 id="5-创建并切换分支本地分支并推送到远程服务器；"><a href="#5-创建并切换分支本地分支并推送到远程服务器；" class="headerlink" title="5,创建并切换分支本地分支并推送到远程服务器；"></a>5,创建并切换分支本地分支并推送到远程服务器；</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">git branch : 查看我们的git仓库有几个分支，而我们目前工作处于那个分支，前面有个*号的就为我们目前所处的分支。</span><br><span class="line"></span><br><span class="line">git branch -a : 查看远程分支。</span><br><span class="line"></span><br><span class="line">git branch name : 创建分支，而这个分支的指针就指向最新的commit对象，也就和HEAD指向同一对象。如git branch <span class="built_in">test</span>，表示创建本地<span class="built_in">test</span>分支。</span><br><span class="line">git checkout name : 切换到目的分支，我们默认的主分支为master。</span><br><span class="line">git checkout –b name：创建并切换分支。</span><br><span class="line">git push origin name： 将本地name分支推送到远程服务器。</span><br><span class="line"></span><br><span class="line">git status : 查看文件更改状态。在添加文件之前或之后，我们会用git status 查看有变化的文件（一般有变化的文件会以红色显示出来）。</span><br><span class="line"></span><br><span class="line">//设置显示隐藏文件夹</span><br><span class="line">defaults write com.apple.finder AppleShowAllFiles YES</span><br></pre></td></tr></table></figure><h2 id="6，遇到的问题，即解决办法："><a href="#6，遇到的问题，即解决办法：" class="headerlink" title="6，遇到的问题，即解决办法："></a>6，遇到的问题，即解决办法：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">! [rejected] master -&gt; master (non-fast-forward)</span><br><span class="line">error: failed to push some refs to <span class="string">'git@github.com:******/Demo.git'</span></span><br><span class="line">hint: Updates were rejected because the tip of your current branch is behind</span><br></pre></td></tr></table></figure><p> <1>. 使用强制push的方法：</1></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push -u origin master -f</span><br></pre></td></tr></table></figure><p>这样会使远程修改丢失，一般是不可取的，尤其是多人协作开发的时候。</p><p> <2>. push前先将远程repository修改pull下来</2></p><blockquote><p>$ git pull origin master</p><p>$ git push -u origin master</p></blockquote><p><3>. 若不想merge远程和本地修改，可以先创建新的分支：</3></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch [name]</span><br></pre></td></tr></table></figure><p>然后push</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push -u origin [name]</span><br></pre></td></tr></table></figure><p>方法一很暴力，但很实用，可以轻易本地文件同步到远程服务器端。<br>多人协作使用，慎用！</p><h2 id="7-tag-的简单使用"><a href="#7-tag-的简单使用" class="headerlink" title="7.tag 的简单使用"></a>7.tag 的简单使用</h2><ol><li>git push –tags 把本地的tag推送到远程</li><li>git fetch origin tag <tagname> 获取远程tag</tagname></li></ol>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/10/27/MAC%20%E7%BB%88%E7%AB%AF%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81%E5%88%B0Github%20%E6%88%96%E8%80%85%20Gitlab/#disqus_thread</comments>
    </item>
    
    <item>
      <title>react-native 之常用组件</title>
      <link>http://yoursite.com/2018/10/27/React%20Native%E5%B8%B8%E7%94%A8%E7%BB%84%E4%BB%B6/</link>
      <guid>http://yoursite.com/2018/10/27/React%20Native%E5%B8%B8%E7%94%A8%E7%BB%84%E4%BB%B6/</guid>
      <pubDate>Sat, 27 Oct 2018 02:30:39 GMT</pubDate>
      <description>
      
        &lt;p&gt;本文收录了,React Native中常用的一些相关组件,&lt;/p&gt;
&lt;p&gt;摘录的过程中,可能有所差错,不足之处还望指出.&lt;/p&gt;
&lt;p&gt;希望大家可以互相学习,互帮互助!&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>本文收录了,React Native中常用的一些相关组件,</p><p>摘录的过程中,可能有所差错,不足之处还望指出.</p><p>希望大家可以互相学习,互帮互助!<br><a id="more"></a></p><hr><h2 id="第一部分"><a href="#第一部分" class="headerlink" title="第一部分"></a>第一部分</h2><p><a href="https://github.com/183959633/react-navigation-CustomerHeadView" target="_blank" rel="noopener">基于react-navigation组件的自定义 head 视图</a></p><p>react-native-carousel 轮播图</p><p>react-native-countdown 倒计时</p><p>react-native-device-info 设备信息</p><p>react-native-fileupload  文件上传</p><p>react-native-icons 图标</p><p>react-native-image-picker  图片选择器</p><p>react-native-keychain   iOSKeyChain管理</p><p>react-native-picker 滚轮选择器</p><p>react-native-picker-Android  安卓滚轮选择器</p><p>react-native-refreshable-listview 可刷新列表</p><p>react-native-scrollable-tab-view 可滚动标签</p><p>react-native-side-menu 侧边栏</p><p>react-native-swiper 轮播</p><p>react-native-video 视频播放</p><p>react-native-viewpager 分页浏览</p><p>react-native-scrollable-tab-view    可滑动的底部或上部导航栏框架</p><p>react-native-tab-navigator    底部或上部导航框架(不可滑动)</p><p>react-native-check-box         CheckBox</p><p>react-native-splash-screen   启动白屏问题</p><p>react-native-simple-router     简易路由跳转框架</p><p>react-native-storage             持久化存储</p><p>react-native-sortable-listview   分类ListView</p><p>react-native-htmlview               将 HTML 目录作为本地视图的控件，其风格可以定制</p><p>react-native-easy-toast         一款简单易用的 Toast 组件</p><hr><h2 id="第二部分"><a href="#第二部分" class="headerlink" title="第二部分"></a>第二部分</h2><p>选项卡 <a href="https://github.com/exponentjs/react-native-tab-navigator" target="_blank" rel="noopener">https://github.com/exponentjs/react-native-tab-navigator</a></p><p>material组件库</p><p><a href="https://github.com/xinthink/react-native-material-kit" target="_blank" rel="noopener">https://github.com/xinthink/react-native-material-kit</a></p><p>base组件库</p><p><a href="http://nativebase.io/docs/v0.4.6/components#anatomy" target="_blank" rel="noopener">http://nativebase.io/docs/v0.4.6/components#anatomy</a></p><p><a href="https://github.com/GeekyAnts/NativeBase" target="_blank" rel="noopener">https://github.com/GeekyAnts/NativeBase</a></p><p>按钮 </p><p><a href="https://github.com/mastermoo/react-native-action-button" target="_blank" rel="noopener">https://github.com/mastermoo/react-native-action-button</a></p><p><a href="https://github.com/ide/react-native-button" target="_blank" rel="noopener">https://github.com/ide/react-native-button</a></p><p>表单验证</p><p><a href="https://github.com/gcanti/tcomb-form-native" target="_blank" rel="noopener">https://github.com/gcanti/tcomb-form-native</a></p><p><a href="https://github.com/FaridSafi/react-native-gifted-form" target="_blank" rel="noopener">https://github.com/FaridSafi/react-native-gifted-form</a></p><p><a href="https://github.com/bartonhammond/snowflake" target="_blank" rel="noopener">https://github.com/bartonhammond/snowflake</a></p><p>带动画效果的TextInput</p><p><a href="https://github.com/halilb/react-native-textinput-effects" target="_blank" rel="noopener">https://github.com/halilb/react-native-textinput-effects</a></p><p><a href="https://github.com/zbtang/React-Native-TextInputLayout" target="_blank" rel="noopener">https://github.com/zbtang/React-Native-TextInputLayout</a></p><p>聊天</p><p><a href="https://github.com/FaridSafi/react-native-gifted-chat" target="_blank" rel="noopener">https://github.com/FaridSafi/react-native-gifted-chat</a></p><p>蓝牙通信 </p><p><a href="http://blog.csdn.net/withings/article/details/71378562" target="_blank" rel="noopener">http://blog.csdn.net/withings/article/details/71378562</a></p><p>谷歌地图</p><p><a href="https://github.com/lelandrichardson/react-native-maps" target="_blank" rel="noopener">https://github.com/lelandrichardson/react-native-maps</a></p><p>高德地图 </p><p><a href="https://github.com/Eleme-IMF/dodo" target="_blank" rel="noopener">https://github.com/Eleme-IMF/dodo</a></p><p>时间轴,快递流程图效果</p><p><a href="https://github.com/24ark/react-native-step-indicator" target="_blank" rel="noopener">https://github.com/24ark/react-native-step-indicator</a></p><p><a href="https://github.com/thegamenicorus/react-native-timeline-listview" target="_blank" rel="noopener">https://github.com/thegamenicorus/react-native-timeline-listview</a></p><p>动画效果</p><p><a href="https://github.com/oblador/react-native-animatable" target="_blank" rel="noopener">https://github.com/oblador/react-native-animatable</a></p><p>加载Loading动画</p><p><a href="https://github.com/maxs15/react-native-spinkit" target="_blank" rel="noopener">https://github.com/maxs15/react-native-spinkit</a></p><p>抽屉效果</p><p><a href="https://github.com/root-two/react-native-drawer" target="_blank" rel="noopener">https://github.com/root-two/react-native-drawer</a></p><p><a href="https://github.com/react-native-fellowship/react-native-side-menu" target="_blank" rel="noopener">https://github.com/react-native-fellowship/react-native-side-menu</a></p><p>侧滑按钮</p><p><a href="https://github.com/dancormier/react-native-swipeout" target="_blank" rel="noopener">https://github.com/dancormier/react-native-swipeout</a></p><p><a href="https://github.com/jemise111/react-native-swipe-list-view" target="_blank" rel="noopener">https://github.com/jemise111/react-native-swipe-list-view</a></p><p>图表/制图</p><p><a href="https://github.com/tomauty/react-native-chart" target="_blank" rel="noopener">https://github.com/tomauty/react-native-chart</a></p><p>股票金融</p><p><a href="https://github.com/7kfpun/FinanceReactNative" target="_blank" rel="noopener">https://github.com/7kfpun/FinanceReactNative</a></p><p>时间组件</p><p><a href="https://github.com/xgfe/react-native-datepicker" target="_blank" rel="noopener">https://github.com/xgfe/react-native-datepicker</a></p><p>日历组件</p><p><a href="https://github.com/wix/react-native-calendars" target="_blank" rel="noopener">https://github.com/wix/react-native-calendars</a></p><p>电子签名</p><p><a href="https://github.com/jgrancher/react-native-sketch" target="_blank" rel="noopener">https://github.com/jgrancher/react-native-sketch</a></p><p>下拉放大(回弹效果)</p><p><a href="https://github.com/lelandrichardson/react-native-parallax-view" target="_blank" rel="noopener">https://github.com/lelandrichardson/react-native-parallax-view</a></p><p>日历组件</p><p><a href="https://github.com/cqm1994617/react-native-myCalendar" target="_blank" rel="noopener">https://github.com/cqm1994617/react-native-myCalendar</a></p><p><a href="https://github.com/vczero/react-native-calendar" target="_blank" rel="noopener">https://github.com/vczero/react-native-calendar</a></p><p>多语言</p><p><a href="https://github.com/joshswan/react-native-globalize" target="_blank" rel="noopener">https://github.com/joshswan/react-native-globalize</a></p><p>单选/多选组件</p><p><a href="https://github.com/hinet/react-native-checkboxlist" target="_blank" rel="noopener">https://github.com/hinet/react-native-checkboxlist</a></p><p>二维码</p><p><a href="https://github.com/ideacreation/react-native-barcodescanner" target="_blank" rel="noopener">https://github.com/ideacreation/react-native-barcodescanner</a></p><p>制作本地库</p><p><a href="https://github.com/frostney/react-native-create-library" target="_blank" rel="noopener">https://github.com/frostney/react-native-create-library</a></p><p>影音相关</p><p><a href="https://github.com/MisterAlex95/react-native-record-sound" target="_blank" rel="noopener">https://github.com/MisterAlex95/react-native-record-sound</a></p><p>提示消息(横条Bar)</p><p><a href="https://github.com/KBLNY/react-native-message-bar" target="_blank" rel="noopener">https://github.com/KBLNY/react-native-message-bar</a></p><p>iOS原生TableView</p><p><a href="https://github.com/aksonov/react-native-tableview" target="_blank" rel="noopener">https://github.com/aksonov/react-native-tableview</a></p><p>点击弹出视图</p><p><a href="https://github.com/jeanregisser/react-native-popover" target="_blank" rel="noopener">https://github.com/jeanregisser/react-native-popover</a></p><p><a href="https://github.com/instea/react-native-popup-menu" target="_blank" rel="noopener">https://github.com/instea/react-native-popup-menu</a></p><p>3D Touch</p><p><a href="https://github.com/madriska/react-native-quick-actions" target="_blank" rel="noopener">https://github.com/madriska/react-native-quick-actions</a></p><p>双平台兼容的ActionSheet</p><p><a href="https://github.com/beefe/react-native-actionsheet" target="_blank" rel="noopener">https://github.com/beefe/react-native-actionsheet</a></p><p>照片墙</p><p><a href="https://github.com/ldn0x7dc/react-native-gallery" target="_blank" rel="noopener">https://github.com/ldn0x7dc/react-native-gallery</a></p><p>键盘遮挡问题</p><p><a href="https://github.com/reactnativecn/react-native-inputscrollview" target="_blank" rel="noopener">https://github.com/reactnativecn/react-native-inputscrollview</a></p><p><a href="https://github.com/wix/react-native-keyboard-aware-scrollview" target="_blank" rel="noopener">https://github.com/wix/react-native-keyboard-aware-scrollview</a></p><p>本地存储</p><p><a href="https://github.com/sunnylqm/react-native-storage" target="_blank" rel="noopener">https://github.com/sunnylqm/react-native-storage</a></p><p>小星星评分(动画效果)</p><p><a href="https://github.com/djchie/react-native-star-rating" target="_blank" rel="noopener">https://github.com/djchie/react-native-star-rating</a></p><p>扫描二维码</p><p><a href="https://github.com/lazaronixon/react-native-qrcode-reader" target="_blank" rel="noopener">https://github.com/lazaronixon/react-native-qrcode-reader</a></p><p>通讯录</p><p><a href="https://github.com/rt2zz/react-native-contacts" target="_blank" rel="noopener">https://github.com/rt2zz/react-native-contacts</a></p><p>加密</p><p><a href="https://www.npmjs.com/package/crypto-js" target="_blank" rel="noopener">https://www.npmjs.com/package/crypto-js</a></p><p>清除缓存</p><p><a href="https://github.com/reactnativecn/react-native-http-cache" target="_blank" rel="noopener">https://github.com/reactnativecn/react-native-http-cache</a></p><p>ListView的优化</p><p><a href="https://github.com/sghiassy/react-native-sglistview" target="_blank" rel="noopener">https://github.com/sghiassy/react-native-sglistview</a></p><p>图片base64转码</p><p><a href="https://github.com/xfumihiro/react-native-image-to-base64" target="_blank" rel="noopener">https://github.com/xfumihiro/react-native-image-to-base64</a></p><p>白屏问题</p><p><a href="https://github.com/mehcode/rn-splash-screen" target="_blank" rel="noopener">https://github.com/mehcode/rn-splash-screen</a></p><p>Text跑马灯效果</p><p><a href="https://github.com/remobile/react-native-marquee-label" target="_blank" rel="noopener">https://github.com/remobile/react-native-marquee-label</a></p><p>WebView相关</p><p><a href="https://github.com/alinz/react-native-webview-bridge" target="_blank" rel="noopener">https://github.com/alinz/react-native-webview-bridge</a></p><p>判断横竖屏</p><p><a href="https://github.com/yamill/react-native-orientation" target="_blank" rel="noopener">https://github.com/yamill/react-native-orientation</a></p><p>PDF</p><p><a href="https://github.com/cnjon/react-native-pdf-view" target="_blank" rel="noopener">https://github.com/cnjon/react-native-pdf-view</a></p><p>获取设备信息</p><p><a href="https://github.com/rebeccahughes/react-native-device-info" target="_blank" rel="noopener">https://github.com/rebeccahughes/react-native-device-info</a></p><p>手势放大/缩小/移动</p><p><a href="https://github.com/kiddkai/react-native-gestures" target="_blank" rel="noopener">https://github.com/kiddkai/react-native-gestures</a></p><p><a href="https://github.com/johanneslumpe/react-native-gesture-recognizers" target="_blank" rel="noopener">https://github.com/johanneslumpe/react-native-gesture-recognizers</a></p><p>上拉-刷新/下拉-加载</p><p><a href="https://github.com/FaridSafi/react-native-gifted-listview" target="_blank" rel="noopener">https://github.com/FaridSafi/react-native-gifted-listview</a></p><p><a href="https://github.com/jsdf/react-native-refreshable-listview" target="_blank" rel="noopener">https://github.com/jsdf/react-native-refreshable-listview</a></p><p><a href="https://github.com/greatbsky/react-native-pull/wiki" target="_blank" rel="noopener">https://github.com/greatbsky/react-native-pull/wiki</a></p><p>下拉选</p><p><a href="https://github.com/alinz/react-native-dropdown" target="_blank" rel="noopener">https://github.com/alinz/react-native-dropdown</a></p><p>图片查看</p><p><a href="https://github.com/oblador/react-native-lightbox" target="_blank" rel="noopener">https://github.com/oblador/react-native-lightbox</a></p><p>照片选择</p><p><a href="https://github.com/marcshilling/react-native-image-picker" target="_blank" rel="noopener">https://github.com/marcshilling/react-native-image-picker</a></p><p><a href="https://github.com/ivpusic/react-native-image-crop-picker" target="_blank" rel="noopener">https://github.com/ivpusic/react-native-image-crop-picker</a></p><p>图片加载进度条</p><p><a href="https://github.com/oblador/react-native-image-progress" target="_blank" rel="noopener">https://github.com/oblador/react-native-image-progress</a></p><p>轮播视图</p><p><a href="https://github.com/race604/react-native-viewpager" target="_blank" rel="noopener">https://github.com/race604/react-native-viewpager</a></p><p><a href="https://github.com/FuYaoDe/react-native-app-intro" target="_blank" rel="noopener">https://github.com/FuYaoDe/react-native-app-intro</a></p><p><a href="https://github.com/appintheair/react-native-looped-carousel" target="_blank" rel="noopener">https://github.com/appintheair/react-native-looped-carousel</a></p><p><a href="https://github.com/leecade/react-native-swiper" target="_blank" rel="noopener">https://github.com/leecade/react-native-swiper</a></p><p>模态视图</p><p><a href="https://github.com/maxs15/react-native-modalbox" target="_blank" rel="noopener">https://github.com/maxs15/react-native-modalbox</a></p><p><a href="https://github.com/brentvatne/react-native-modal" target="_blank" rel="noopener">https://github.com/brentvatne/react-native-modal</a></p><p><a href="https://github.com/bodyflex/react-native-simple-modal" target="_blank" rel="noopener">https://github.com/bodyflex/react-native-simple-modal</a></p><p>毛玻璃效果</p><p><a href="https://github.com/react-native-fellowship/react-native-blur" target="_blank" rel="noopener">https://github.com/react-native-fellowship/react-native-blur</a></p><p>HTML 相关</p><p><a href="https://github.com/jsdf/react-native-htmlview" target="_blank" rel="noopener">https://github.com/jsdf/react-native-htmlview</a></p><p>推荐一款最近用到的日历组件(iOS android 两端通用)———–2018-01-25</p><p>日历组件</p><p><a href="https://github.com/xgfe/react-native-datepicker" target="_blank" rel="noopener">https://github.com/xgfe/react-native-datepicker</a></p><p>下拉选组件(ios,android 两端通用)———2018-01-25</p><p>Picker组件</p><p><a href="https://github.com/beefe/react-native-picker" target="_blank" rel="noopener">https://github.com/beefe/react-native-picker</a></p><p>短信倒计时（支持后台持续计时）   ——2018-04-09</p><p><a href="https://github.com/kkkelicheng/ReactNative-CountDownButton" target="_blank" rel="noopener">https://github.com/kkkelicheng/ReactNative-CountDownButton</a></p>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/10/27/React%20Native%E5%B8%B8%E7%94%A8%E7%BB%84%E4%BB%B6/#disqus_thread</comments>
    </item>
    
    <item>
      <title>react-native 之react-native-swiper 动态赋值</title>
      <link>http://yoursite.com/2018/10/27/React-native%20%E4%B9%8B%20react-native-swiper%20%E5%8A%A8%E6%80%81%E8%B5%8B%E5%80%BC/</link>
      <guid>http://yoursite.com/2018/10/27/React-native%20%E4%B9%8B%20react-native-swiper%20%E5%8A%A8%E6%80%81%E8%B5%8B%E5%80%BC/</guid>
      <pubDate>Sat, 27 Oct 2018 02:28:39 GMT</pubDate>
      <description>
      
        &lt;p&gt;在实际开发中, 经常会遇到轮播图, 轮播图的数据通常情况下都是网络获取的. 这里简单的记录一下接口获取轮播图数据, 然后动态赋值给 swiper.&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>在实际开发中, 经常会遇到轮播图, 轮播图的数据通常情况下都是网络获取的. 这里简单的记录一下接口获取轮播图数据, 然后动态赋值给 swiper.<br><a id="more"></a></p><p>轮播图组件是通过 <code>react-native-swiper</code> 实现, 这里不再多说.</p><p>直接源码说明:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">MainPage</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> navigationOptions = &#123;</span><br><span class="line">        headerTitle: <span class="string">'首页'</span>,</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">        <span class="keyword">super</span>(props);</span><br><span class="line">        <span class="keyword">this</span>.state = &#123;</span><br><span class="line">            bannerData: <span class="literal">null</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    componentDidMount() &#123;</span><br><span class="line">        <span class="keyword">this</span>.fetchData();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    render() &#123;</span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line"></span><br><span class="line">            &lt;View style=&#123;styles.container&#125;&gt;</span><br><span class="line">                &lt;ScrollView style=&#123;styles.container&#125;&gt;</span><br><span class="line"></span><br><span class="line">                    &lt;View style=&#123;styles.cycle_view&#125;&gt;</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">this</span>.state.bannerData == <span class="literal">null</span> ?</span><br><span class="line">                                &lt;View style=&#123;styles.slide&#125;/&gt;</span><br><span class="line">                                :</span><br><span class="line">                                &lt;Swiper</span><br><span class="line">                                    style=&#123;styles.swiper&#125;</span><br><span class="line">                                    height=&#123;width/<span class="number">720</span>*<span class="number">407</span>&#125;</span><br><span class="line">                                    loop=&#123;<span class="literal">true</span>&#125;</span><br><span class="line">                                    autoplay=&#123;<span class="literal">true</span>&#125;</span><br><span class="line">                                    autoplayTimeout=&#123;<span class="number">3</span>&#125;</span><br><span class="line">                                    horizontal=&#123;<span class="literal">true</span>&#125;</span><br><span class="line">                                    paginationStyle=&#123;&#123;<span class="attr">bottom</span>: <span class="number">10</span>&#125;&#125;</span><br><span class="line">                                    showsPagination=&#123;<span class="literal">false</span>&#125;&gt;</span><br><span class="line">                                    &#123;<span class="keyword">this</span>.renderSwiper()&#125;</span><br><span class="line">                                &lt;<span class="regexp">/Swiper&gt;</span></span><br><span class="line"><span class="regexp">                        &#125;</span></span><br><span class="line"><span class="regexp">                    &lt;/</span>View&gt;</span><br><span class="line">                &lt;<span class="regexp">/ScrollView&gt;</span></span><br><span class="line"><span class="regexp">            &lt;/</span>View&gt;</span><br><span class="line">        );</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//请求数据</span></span><br><span class="line">    fetchData() &#123;</span><br><span class="line">        NetRequest.get(<span class="string">'你的接口 url地址'</span>,<span class="literal">null</span>,<span class="literal">null</span>).then(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">                bannerData: response[<span class="string">'data'</span>]</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;, (error) =&gt; &#123;</span><br><span class="line">            Alert.alert(<span class="string">'error'</span>)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 渲染</span></span><br><span class="line">    renderSwiper()&#123;</span><br><span class="line">        <span class="keyword">var</span> itemArr = [];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.state.bannerData.length; i++) &#123;</span><br><span class="line">            <span class="keyword">let</span> data = <span class="keyword">this</span>.state.bannerData[i];</span><br><span class="line">            itemArr.push(</span><br><span class="line">                &lt;TouchableOpacity key=&#123;i&#125;&gt;</span><br><span class="line">                    &lt;Image source=&#123;&#123;<span class="attr">uri</span>: data[<span class="string">'imagePath'</span>]&#125;&#125; style=&#123;styles.swiper_image&#125; /&gt;</span><br><span class="line">                &lt;<span class="regexp">/TouchableOpacity&gt;</span></span><br><span class="line"><span class="regexp">            );</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        return itemArr;</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">const styles = StyleSheet.create(&#123;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    container: &#123;</span></span><br><span class="line"><span class="regexp">        backgroundColor: color.view_background,</span></span><br><span class="line"><span class="regexp">        flex: 1,</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    cycle_view: &#123;</span></span><br><span class="line"><span class="regexp">      height: width/</span><span class="number">720</span>*<span class="number">407</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    slide: &#123;</span><br><span class="line">        flex: <span class="number">1</span>,</span><br><span class="line">        justifyContent: <span class="string">'center'</span>,</span><br><span class="line">        alignItems: <span class="string">'center'</span>,</span><br><span class="line">        backgroundColor: <span class="string">'#9DD6EB'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    swiper: &#123;</span><br><span class="line">    &#125;,</span><br><span class="line">    swiper_image: &#123;</span><br><span class="line">        height: width/<span class="number">720</span>*<span class="number">407</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>其实很简单, 就是通过请求的数据来动态的创建每一个 swiperItem !</p><p><strong>react-native 小白交流群: 860196537 或者    234713941</strong>  </p><p>enjoy it!</p>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/10/27/React-native%20%E4%B9%8B%20react-native-swiper%20%E5%8A%A8%E6%80%81%E8%B5%8B%E5%80%BC/#disqus_thread</comments>
    </item>
    
    <item>
      <title>react-native 之九宫格列表</title>
      <link>http://yoursite.com/2018/10/27/react-native%20%E4%B9%8B%E4%B9%9D%E5%AE%AB%E6%A0%BC%E5%88%97%E8%A1%A8/</link>
      <guid>http://yoursite.com/2018/10/27/react-native%20%E4%B9%8B%E4%B9%9D%E5%AE%AB%E6%A0%BC%E5%88%97%E8%A1%A8/</guid>
      <pubDate>Sat, 27 Oct 2018 02:25:39 GMT</pubDate>
      <description>
      
        &lt;p&gt;先上效果图:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdn.net/20180817092853807?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RocmVlX1poYW5n/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70&quot; alt=&quot;这里写图片描述&quot;&gt;&lt;/p&gt;
&lt;p&gt;就是类似这种的列表. 在 iOS 中有 &lt;code&gt;UICollectionView&lt;/code&gt; 可以直接写这种类型的列表, 但在&lt;code&gt;React-native&lt;/code&gt; 中直接就可以用 &lt;code&gt;FlatList&lt;/code&gt; 完成, 也就是说这种类型的列表和普通的列表没什么区别, 只是在布局的时候要些许的差异. Let’s do it!&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>先上效果图:</p><p><img src="https://img-blog.csdn.net/20180817092853807?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RocmVlX1poYW5n/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p>就是类似这种的列表. 在 iOS 中有 <code>UICollectionView</code> 可以直接写这种类型的列表, 但在<code>React-native</code> 中直接就可以用 <code>FlatList</code> 完成, 也就是说这种类型的列表和普通的列表没什么区别, 只是在布局的时候要些许的差异. Let’s do it!<br><a id="more"></a></p><h2 id="1-渲染一个列表"><a href="#1-渲染一个列表" class="headerlink" title="1.渲染一个列表"></a>1.渲染一个列表</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">render() &#123;</span><br><span class="line">       return (</span><br><span class="line">           <span class="tag">&lt;<span class="name">View</span> <span class="attr">style</span>=<span class="string">&#123;styles.container&#125;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">FlatList</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">data</span>=<span class="string">&#123;this.state.data&#125;</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">renderItem</span>=<span class="string">&#123;this.renderItem&#125;</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">keyExtractor</span>=<span class="string">&#123;(item,</span> <span class="attr">index</span>) =&gt;</span> index&#125;</span><br><span class="line">                   contentContainerStyle=&#123;styles.list_container&#125;</span><br><span class="line">               /&gt;</span><br><span class="line">           <span class="tag">&lt;/<span class="name">View</span>&gt;</span></span><br><span class="line">       )</span><br><span class="line">   &#125;;</span><br></pre></td></tr></table></figure><h2 id="2-给列表一个样式"><a href="#2-给列表一个样式" class="headerlink" title="2. 给列表一个样式"></a>2. 给列表一个样式</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-tag">list_container</span>: &#123;</span><br><span class="line">        // 主轴方向</span><br><span class="line">        <span class="selector-tag">flexDirection</span><span class="selector-pseudo">:'row'</span>,</span><br><span class="line">        justifyContent: 'space-between',</span><br><span class="line">        // 一行显示不下,换一行</span><br><span class="line">        <span class="selector-tag">flexWrap</span><span class="selector-pseudo">:'wrap'</span>,</span><br><span class="line">        // 侧轴方向</span><br><span class="line">        alignItems:'center', // 必须设置,否则换行不起作用</span><br><span class="line">        <span class="selector-tag">paddingHorizontal</span>: 20,</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><p><strong>这里注意:  <code>flexDirection</code>    <code>flexWrap</code>   <code>alignItems</code> 这三个属性是必须设置的.</strong> </p><p>其实写九宫格列表最重要的就是这一块.</p><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码:"></a>完整代码:</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123;width, height&#125; = Dimensions.get(<span class="string">'window'</span>)</span><br><span class="line"><span class="keyword">const</span> cols = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">const</span> vMargin = <span class="number">20</span>;</span><br><span class="line"><span class="keyword">const</span> cellWH = (width<span class="number">-2</span>*vMargin<span class="number">-15</span>)/cols;</span><br><span class="line"><span class="keyword">const</span> hMargin = <span class="number">25</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">AllRecommend</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">        <span class="keyword">super</span>(props)</span><br><span class="line">        <span class="keyword">this</span>.state = &#123;</span><br><span class="line">            data: [],</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    componentDidMount() &#123;</span><br><span class="line">        <span class="keyword">this</span>.fetchData();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    render() &#123;</span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            &lt;View style=&#123;styles.container&#125;&gt;</span><br><span class="line">                &lt;FlatList</span><br><span class="line">                    data=&#123;<span class="keyword">this</span>.state.data&#125;</span><br><span class="line">                    renderItem=&#123;<span class="keyword">this</span>.renderItem&#125;</span><br><span class="line">                    keyExtractor=&#123;(item, index) =&gt; index&#125;</span><br><span class="line">                    contentContainerStyle=&#123;styles.list_container&#125;</span><br><span class="line">                /&gt;</span><br><span class="line">            &lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">        )</span></span><br><span class="line"><span class="regexp">    &#125;;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    renderItem(&#123;item, index&#125;)  &#123;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        return (</span></span><br><span class="line"><span class="regexp">            &lt;TouchableOpacity activeOpacity=&#123;0.5&#125;&gt;</span></span><br><span class="line"><span class="regexp">                &lt;View style=&#123;styles.item&#125;&gt;</span></span><br><span class="line"><span class="regexp">                    &lt;Image source=&#123;&#123;uri: item['image']&#125;&#125; style=&#123;&#123;width: cellWH,height:cellWH, borderRadius: 5&#125;&#125;/</span>&gt;</span><br><span class="line">                    &lt;Text style=&#123;&#123;<span class="attr">marginTop</span>: <span class="number">5</span>, <span class="attr">textAlign</span>: <span class="string">'center'</span>&#125;&#125; numberOfLines=&#123;<span class="number">1</span>&#125;&gt;&#123;item.title&#125;&lt;<span class="regexp">/Text&gt;</span></span><br><span class="line"><span class="regexp">                &lt;/</span>View&gt;</span><br><span class="line">            &lt;<span class="regexp">/TouchableOpacity&gt;</span></span><br><span class="line"><span class="regexp">        )</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    fetchData() &#123;</span></span><br><span class="line"><span class="regexp">        NetRequest.get('https:/</span><span class="regexp">/api.douban.com/</span>v2/music/search?q=李志<span class="string">',null,null).then((response) =&gt; &#123;</span></span><br><span class="line"><span class="string">            this.setState(&#123;</span></span><br><span class="line"><span class="string">                data: response['</span>musics<span class="string">']</span></span><br><span class="line"><span class="string">            &#125;)</span></span><br><span class="line"><span class="string">        &#125;, (error) =&gt; &#123;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        &#125;)</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">const styles = StyleSheet.create(&#123;</span></span><br><span class="line"><span class="string">    container: &#123;</span></span><br><span class="line"><span class="string">        flex: 1,</span></span><br><span class="line"><span class="string">        backgroundColor: color.white,</span></span><br><span class="line"><span class="string">        paddingVertical: 15,</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    list_container: &#123;</span></span><br><span class="line"><span class="string">        // 主轴方向</span></span><br><span class="line"><span class="string">        flexDirection:'</span>row<span class="string">',</span></span><br><span class="line"><span class="string">        justifyContent: '</span>space-between<span class="string">',</span></span><br><span class="line"><span class="string">        // 一行显示不下,换一行</span></span><br><span class="line"><span class="string">        flexWrap:'</span>wrap<span class="string">',</span></span><br><span class="line"><span class="string">        // 侧轴方向</span></span><br><span class="line"><span class="string">        alignItems:'</span>center<span class="string">', // 必须设置,否则换行不起作用</span></span><br><span class="line"><span class="string">        paddingHorizontal: 20,</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    item: &#123;</span></span><br><span class="line"><span class="string">        width:cellWH,</span></span><br><span class="line"><span class="string">        marginTop:hMargin,</span></span><br><span class="line"><span class="string">        alignItems: '</span>center<span class="string">',</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;)</span></span><br></pre></td></tr></table></figure><p>每一个 item 的大小尺寸可以根据自己的实际需求去设置.  </p><p>enjoy it!</p><p><strong>小白开发交流群: 860196537</strong></p>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/10/27/react-native%20%E4%B9%8B%E4%B9%9D%E5%AE%AB%E6%A0%BC%E5%88%97%E8%A1%A8/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
